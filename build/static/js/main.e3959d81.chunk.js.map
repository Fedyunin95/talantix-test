{"version":3,"sources":["Loader/Loader.js","assets/images/icons/search.js","App/App.js","serviceWorker.js","index.js"],"names":["Loader","className","Search","props","viewBox","width","height","d","App","checkIsLoaded","state","users","length","articles","setState","isLoaded","getUserName","id","currentUser","filter","user","name","filterHandler","event","value","target","item","toLowerCase","indexOf","mainArticles","forEach","article","userId","push","renderArticles","map","key","title","body","fetch","method","then","res","json","data","catch","error","console","log","this","type","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e3959d81.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n  return(\r\n    <div className=\"loader\">\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n      <div className=\"dot\" />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react'\r\n\r\nconst Search = (props) => {\r\n\r\n  return (\r\n    <svg viewBox=\"0 0 463.001 463.001\" className={props.className} width=\"100%\" height=\"100%\">\r\n      <path d=\"M303.501,0c-87.948,0-159.5,71.551-159.5,159.5c0,36.188,12.122,69.593,32.507,96.386l-32.311,32.311\r\n\t\tc-0.205,0.205-0.392,0.421-0.569,0.643c-2.645-0.551-5.363-0.84-8.127-0.84c-10.55,0-20.47,4.109-27.933,11.572l-95.999,95.999\r\n\t\tC4.108,403.03,0,412.949,0,423.5s4.108,20.471,11.568,27.928C19.031,458.891,28.951,463,39.501,463s20.47-4.109,27.933-11.572\r\n\t\tl95.999-95.999c7.461-7.458,11.569-17.377,11.569-27.929c0-2.765-0.289-5.484-0.84-8.129c0.222-0.176,0.437-0.363,0.642-0.568\r\n\t\tl32.31-32.31C233.908,306.879,267.313,319,303.501,319c87.948,0,159.5-71.551,159.5-159.5S391.449,0,303.501,0z M56.826,440.822\r\n\t\tC52.197,445.451,46.045,448,39.501,448s-12.696-2.549-17.326-7.179C17.548,436.196,15,430.045,15,423.5s2.548-12.696,7.176-17.322\r\n\t\tl86.698-86.698l34.647,34.647L56.826,440.822z M154.075,343.468l-34.528-34.528c4.575-3.936,10.258-5.926,15.954-5.926\r\n\t\tc6.274,0,12.55,2.389,17.326,7.166c4.627,4.625,7.175,10.776,7.175,17.321C160.002,333.427,157.906,339.027,154.075,343.468z\r\n\t\t M167.73,304.665c-1.278-1.796-2.706-3.503-4.296-5.092c-1.592-1.591-3.301-3.02-5.098-4.299l27.841-27.841\r\n\t\tc3,3.259,6.134,6.393,9.393,9.393L167.73,304.665z M303.501,304c-79.678,0-144.5-64.822-144.5-144.5S223.823,15,303.501,15\r\n\t\ts144.5,64.822,144.5,144.5S383.179,304,303.501,304z\"/>\r\n      <path d=\"M303.501,32c-70.304,0-127.5,57.196-127.5,127.5S233.197,287,303.501,287s127.5-57.196,127.5-127.5S373.805,32,303.501,32z\r\n\t\t M303.501,272c-62.032,0-112.5-50.467-112.5-112.5S241.469,47,303.501,47s112.5,50.467,112.5,112.5S365.533,272,303.501,272z\"/>\r\n      <path d=\"M355.58,79.438c-3.47-2.262-8.116-1.283-10.378,2.188c-2.262,3.47-1.282,8.117,2.188,10.378\r\n\t\tc22.924,14.94,36.61,40.172,36.61,67.496c0,18.667-6.534,36.86-18.399,51.226c-2.638,3.193-2.187,7.921,1.007,10.559\r\n\t\tc1.398,1.155,3.09,1.717,4.772,1.717c2.16,0,4.304-0.929,5.787-2.724c14.079-17.047,21.833-38.632,21.833-60.777\r\n\t\tC399.001,127.087,382.769,97.158,355.58,79.438z\"/>\r\n      <path d=\"M320.856,65.575C315.168,64.53,309.329,64,303.501,64c-4.143,0-7.5,3.358-7.5,7.5s3.357,7.5,7.5,7.5\r\n\t\tc4.922,0,9.849,0.447,14.645,1.328c0.459,0.084,0.914,0.125,1.364,0.125c3.549,0,6.703-2.531,7.368-6.146\r\n\t\tC327.626,70.233,324.93,66.324,320.856,65.575z\"/>\r\n    </svg>\r\n  )\r\n\r\n};\r\n\r\nexport default Search\r\n","import React, {Component} from 'react';\n\nimport Loader from '../Loader/Loader'\n\nimport Search from '../assets/images/icons/search'\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      articles: [],\n      users: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/posts', {\n      method:'GET'\n    })\n      .then(res => res.json())\n      .then(data => {\n        // mainArticles добавил чтобы хранить данные пришедшие с сервера.\n        // можно вынести в родительский элемент, но обычно выносится в стор и получается как пропсы\n        this.setState({articles: data, mainArticles: data});\n        this.checkIsLoaded();\n      })\n      .catch( error => (console.log(error)));\n\n    fetch('http://jsonplaceholder.typicode.com/users', {\n      method:'GET'\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({users: data});\n        this.checkIsLoaded();\n      })\n      .catch( error => (console.log(error)))\n  }\n\n  checkIsLoaded = () => {\n    if (this.state.users.length > 0 && this.state.articles.length > 0) this.setState({isLoaded: true})\n  };\n\n  getUserName = (id) => {\n      const currentUser = this.state.users.filter(user => user.id === id)[0];\n      return currentUser ? currentUser.name : '';\n  };\n\n  filterHandler = (event) => {\n    const value = event.target.value;\n    if (value) {\n      const user = this.state.users.filter(item => item.name.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n\n      let articles = [];\n\n      this.state.mainArticles.forEach(article => {\n        user.forEach(item => {\n          if (article.userId === item.id) articles.push(article);\n        })\n      });\n\n      this.setState({articles})\n    } else {\n      this.setState({articles: this.state.mainArticles })\n    }\n  };\n\n  renderArticles = () => {\n    return this.state.articles.map(article => {\n      return (\n        <div className=\"article\" key={article.id}>\n          <h3 className=\"article__title\">{article.title}</h3>\n          <p className=\"article__short-description\">{article.body}</p>\n          <p className=\"article__author\">{this.getUserName(article.userId)}</p>\n        </div>\n      )\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.isLoaded\n          ? (\n            <>\n              <div className=\"input\">\n                <div className=\"icon\">\n                  <Search />\n                </div>\n                <input type=\"text\" className=\"filter\" onChange={this.filterHandler}/>\n              </div>\n              <div className=\"articles\">\n                {this.renderArticles()}\n              </div>\n            </>\n          )\n          : <Loader />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}